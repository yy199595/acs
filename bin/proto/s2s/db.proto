syntax = "proto3";
package db;
message mongo
{
    message insert
    {
        string tab = 1;
        repeated string documents = 2;
    }

    message find
    {
        message request
        {
            string tab = 1;
            int32 limit = 3;
            string filter = 2;
            repeated string fields = 4;
        }
        message page
        {
            string tab = 1;
            string filter = 2;
            int32 page = 3;
            int32 count = 4;
            string sort = 6;
            repeated string fields = 5;
        }

        message more
        {
            string tab = 1;
            int64 cursor = 2;
            int32 batchSize = 3;
        }

        message distinct
        {
            string tab = 1;
            string key = 2;
            string filter = 3;
        }

        message response
        {
            int64 cursor = 1;
            repeated bytes documents = 2;
        }

    }
    message find_one
    {
        message request
        {
            string tab = 1;
            string filter = 2;
            repeated string fields = 3;
        }
        message response
        {
            string document = 1;
        }
    }

    message aggregate
    {
        message request
        {
            string tab = 1;
            string by = 2;
            string cmd = 5;
            string field = 3;
            string filter = 4;
            int32 batchSize = 6;
        }
        message facet
        {
            string tab = 1;
            string _id = 2;
            string group = 3;
            int32 batchSize = 4;
            repeated string match = 5;
        }
    }

    message count
    {
        message request
        {
            string tab = 1;
            string filter = 2;
        }
        message response
        {
            int32 count = 1;
        }
    }

    message remove
    {
        string tab = 1;
        string filter = 2;
        int32 limit = 3;
    }
    message index
    {
        string tab = 1;
        string key = 2;
        int32 sort = 3; //1:升序 2:降序
        bool unique = 4;
    }

    message updater
    {
        string cmd = 1;
        string filter = 2;
        string document = 3;
    }

    message updates
    {
        string tab = 1;
        repeated updater document = 2;
    }

    message update
    {
        string tab = 1;
        updater document = 2;
        bool upsert = 3;
        bool multi = 4;
    }

    message response
    {
        int32 count = 1;
    }

    message inc
    {
        message request
        {
            string key = 1;
        }
        message response
        {
            int32 value = 1;
        }
    }

    message find_modify
    {
        message request
        {
            string tab = 1;
            string filter = 2;
            string update = 3;
            repeated string fields = 4;
        }
        message response
        {
            string document = 1;
        }
    }

    message command
    {
        message request
        {
            string tab = 1;
            string cmd = 2;
            string document = 3;
        }
        message response
        {
            string document = 1;
        }
    }

    message merge
    {
        message request
        {
            string field = 1;
            string source = 2;
            string target = 3;
        }
        message response
        {
            string uuid = 1;
        }
    }
}

message sql //mysql操作
{
    message create
    {
        string table = 1; // xxx.xxx
        repeated string keys = 2; //主键
        //google.protobuf.Any data = 3; //pb结构可以有默认值
    }

    message index
    {
        string tab = 1;
        string name = 2;
        int32 sort = 3; //1:升序 2:降序
        bool unique = 4;
    }

    message exec
    {
        string sql = 1; //sql语句
    }

    message insert
    {
        int32 flag = 1;
        string table = 2;
        string document = 3;
    }
    message save
    {
        int32 flag = 1;
        string table = 2;
        string data = 3;
    }
    message query
    {
        message request
        {
            string table = 1;
            int32 limit = 2;
            string filter = 3;
            repeated string fields = 4;
        }
        message page
        {
            string table = 1;
            int32 limit = 2;
            string filter = 3;
            string sorter = 4;
            int32 page = 5;
            repeated string fields = 6;
        }
        message response
        {
            string error = 1;
            repeated bytes documents = 2;
        }
    }
    message del
    {
        int32 flag = 1;
        string table = 2;
        string filter = 3;
        int32 limit = 4;
    }

    message inc
    {
        string key = 1;
        int32 count = 2;
    }

    message update
    {
        int32 flag = 1;
        string table = 2;
        string filter = 3;
        string document = 4;
        int32 limit = 5;
    }

    message response
    {
        string error = 1;
        uint32 count = 2;
    }
}

